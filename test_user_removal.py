#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —á–∞—Ç–∞
"""
import json
from types import SimpleNamespace

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
def load_authorized_users():
    with open('authorized_users.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def save_authorized_users(data):
    with open('authorized_users.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)

# –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def simulate_user_left(user_id, chat_id, section):
    print(f"üß™ –¢–ï–°–¢: –°–∏–º—É–ª—è—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∏–∑ —á–∞—Ç–∞ {chat_id} (—Ä–∞–π–æ–Ω: {section})")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    authorized_users = load_authorized_users()
    
    print(f"üìã –°–æ—Å—Ç–æ—è–Ω–∏–µ –î–û —É–¥–∞–ª–µ–Ω–∏—è:")
    print(f"   {section}: {authorized_users.get(section, [])}")
    
    changed = False
    
    # –£–¥–∞–ª—è–µ–º –∏–∑ authorized_users (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ —Å–ª–æ–≤–∞—Ä—è–º–∏)
    if section in authorized_users and isinstance(authorized_users[section], dict):
        authorized_list = authorized_users[section].get("authorized", [])
        if user_id in authorized_list:
            authorized_users[section]["authorized"].remove(user_id)
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∏–∑ authorized –¥–ª—è {section}")
            changed = True
        
        # –£–¥–∞–ª—è–µ–º –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π —Ä–∞–π–æ–Ω–∞
        if authorized_users[section].get("representative") == user_id:
            authorized_users[section]["representative"] = None
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å {user_id} –¥–ª—è {section}")
            changed = True
    
    if changed:
        save_authorized_users(authorized_users)
        print(f"üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
        
        print(f"üìã –°–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï —É–¥–∞–ª–µ–Ω–∏—è:")
        print(f"   {section}: {authorized_users.get(section, [])}")
        
        return True
    else:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è {section}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —á–∞—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = simulate_user_left(123456789, -1001234567890, "—É—á–∞—Å—Ç–æ–∫‚Ññ1")
    
    print("\n" + "=" * 50)
    print(f"üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: {'‚úÖ –£–°–ü–ï–®–ù–û' if result else '‚ùå –ù–ï–£–î–ê–ß–ù–û'}")