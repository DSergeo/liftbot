import schedule
import time
from datetime import datetime
import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç bot –∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ bot_requests
from . import bot
from .shared import requests_list, personnel_chats, district_ids, kyiv_tz

logger = logging.getLogger(__name__)

def send_daily():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∞—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —á–∞—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.
    """
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
    summary = {}
    current_time_kyiv = datetime.now(kyiv_tz)

    for i, r in enumerate(requests_list):
        # –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–µ
        if r.get("completed"):
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥ –∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        try:
            request_time = kyiv_tz.localize(datetime.strptime(r["timestamp"], "%Y-%m-%d %H:%M:%S"))
            if current_time_kyiv - request_time < timedelta(hours=24):
                continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞—è–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–º –º–µ–Ω—å—à–µ 24 —á–∞—Å–æ–≤
        except ValueError:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å timestamp –¥–ª—è –∑–∞—è–≤–∫–∏: {r.get('id')}")
            continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç
        district_id = district_ids.get(r.get("district"))
        if not district_id:
            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω ID —Ä–∞–π–æ–Ω–∞ –¥–ª—è –∑–∞—è–≤–∫–∏: {r.get('id')}, —Ä–∞–π–æ–Ω: {r.get('district')}")
            continue

        chat = personnel_chats.get(district_id)
        if not chat:
            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω —á–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–ª—è —Ä–∞–π–æ–Ω–∞: {district_id}")
            continue

        summary.setdefault(chat, [])
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
        # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ chat_msg_id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
        if r.get("chat_msg_id"):
            # –î–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø ID –∫–∞–Ω–∞–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–µ–∑ "-100"
            chat_url_id = str(chat)[4:] if str(chat).startswith("-100") else str(chat)
            url = f"https://t.me/c/{chat_url_id}/{r['chat_msg_id']}"
            summary[chat].append(f"#{i + 1} <a href='{url}'>{r['address']} –ø.{r['entrance']}</a>")
        else:
            summary[chat].append(f"#{i + 1} {r['address']} –ø.{r['entrance']}") # –±–µ–∑ —Å—Å—ã–ª–∫–∏, –µ—Å–ª–∏ –Ω–µ—Ç chat_msg_id

    for chat, lines in summary.items():
        if lines: # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
            message_text = "üìã <b>–ù–µ–≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞—è–≤–∫–∏:</b>\n" + "\n".join(lines)
            try:
                bot.send_message(chat, message_text, parse_mode="HTML", disable_web_page_preview=True)
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –≤ —á–∞—Ç {chat}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ —á–∞—Ç {chat}: {e}")
        else:
            logger.info(f"–í —á–∞—Ç–µ {chat} –Ω–µ—Ç –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫.")

def sched_loop():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è send_daily –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 08:30.
    """
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...")
    schedule.every().day.at("08:30").do(send_daily)
    while True:
        schedule.run_pending()
        time.sleep(60) # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É